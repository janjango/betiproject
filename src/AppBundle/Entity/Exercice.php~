<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Exercice
 *
 * @ORM\Table(name="exercice")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\ExerciceRepository")
 */
class Exercice
{
    /**
     * @ORM\OneToMany(targetEntity="Appel", mappedBy="exercice")
     */
    private $appels;
    /**
     * @ORM\OneToMany(targetEntity="Coffrefort", mappedBy="exercice")
     */
    private $coffreforts;
    /**
     * @ORM\OneToMany(targetEntity="Encaissement", mappedBy="exercice")
     */
    private $encaissements;
    /**
     * @ORM\OneToMany(targetEntity="Paiement", mappedBy="exercice")
     */
    private $paiements;
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="libExercice", type="string", length=10)
     */
    private $libExercice;

    /**
     * @var bool
     *
     * @ORM\Column(name="estActif", type="boolean")
     */
    private $estActif;


    /**
     * @var \DateTime
     *
     * @ORM\Column(name="dateCreate", type="datetime", nullable=true, nullable=true)
     */
    private $dateCreate;

    /**
     * @var string
     * @ORM\Column(name="userCreate", type="string", length=255, nullable=true)
     */
    private $userCreate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="dateModif", type="datetime", nullable=true)
     */
    private $dateModif;

    /**
     * @var string
     *
     * @ORM\Column(name="userModif", type="string", length=255, nullable=true)
     */
    private $userModif;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="datedelete", type="datetime", nullable=true)
     */
    private $datedelete;

    /**
     * @var string
     *
     * @ORM\Column(name="$userdelete", type="string", length=255, nullable=true)
     */
    private $userdelete;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set libExercice
     *
     * @param string $libExercice
     *
     * @return Exercice
     */
    public function setLibExercice($libExercice)
    {
        $this->libExercice = $libExercice;

        return $this;
    }

    /**
     * Get libExercice
     *
     * @return string
     */
    public function getLibExercice()
    {
        return $this->libExercice;
    }

    /**
     * Set estActif
     *
     * @param boolean $estActif
     *
     * @return Exercice
     */
    public function setEstActif($estActif)
    {
        $this->estActif = $estActif;

        return $this;
    }

    /**
     * Get estActif
     *
     * @return bool
     */
    public function getEstActif()
    {
        return $this->estActif;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->appels = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add appel
     *
     * @param \AppBundle\Entity\Appel $appel
     *
     * @return Exercice
     */
    public function addAppel(\AppBundle\Entity\Appel $appel)
    {
        $this->appels[] = $appel;

        return $this;
    }

    /**
     * Remove appel
     *
     * @param \AppBundle\Entity\Appel $appel
     */
    public function removeAppel(\AppBundle\Entity\Appel $appel)
    {
        $this->appels->removeElement($appel);
    }

    /**
     * Get appels
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAppels()
    {
        return $this->appels;
    }

    /**
     * Add encaissement
     *
     * @param \AppBundle\Entity\Encaissement $encaissement
     *
     * @return Exercice
     */
    public function addEncaissement(\AppBundle\Entity\Encaissement $encaissement)
    {
        $this->encaissements[] = $encaissement;

        return $this;
    }

    /**
     * Remove encaissement
     *
     * @param \AppBundle\Entity\Encaissement $encaissement
     */
    public function removeEncaissement(\AppBundle\Entity\Encaissement $encaissement)
    {
        $this->encaissements->removeElement($encaissement);
    }

    /**
     * Get encaissements
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getEncaissements()
    {
        return $this->encaissements;
    }

    /**
     * Add paiement
     *
     * @param \AppBundle\Entity\Paiement $paiement
     *
     * @return Exercice
     */
    public function addPaiement(\AppBundle\Entity\Paiement $paiement)
    {
        $this->paiements[] = $paiement;

        return $this;
    }

    /**
     * Remove paiement
     *
     * @param \AppBundle\Entity\Paiement $paiement
     */
    public function removePaiement(\AppBundle\Entity\Paiement $paiement)
    {
        $this->paiements->removeElement($paiement);
    }

    /**
     * Get paiements
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPaiements()
    {
        return $this->paiements;
    }

    /**
     * Add coffrefort
     *
     * @param \AppBundle\Entity\Coffrefort $coffrefort
     *
     * @return Exercice
     */
    public function addCoffrefort(\AppBundle\Entity\Coffrefort $coffrefort)
    {
        $this->coffreforts[] = $coffrefort;

        return $this;
    }

    /**
     * Remove coffrefort
     *
     * @param \AppBundle\Entity\Coffrefort $coffrefort
     */
    public function removeCoffrefort(\AppBundle\Entity\Coffrefort $coffrefort)
    {
        $this->coffreforts->removeElement($coffrefort);
    }

    /**
     * Get coffreforts
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCoffreforts()
    {
        return $this->coffreforts;
    }

    /**
     * Set dateCreate
     *
     * @param \DateTime $dateCreate
     *
     * @return Exercice
     */
    public function setDateCreate($dateCreate)
    {
        $this->dateCreate = $dateCreate;

        return $this;
    }

    /**
     * Get dateCreate
     *
     * @return \DateTime
     */
    public function getDateCreate()
    {
        return $this->dateCreate;
    }

    /**
     * Set userCreate
     *
     * @param string $userCreate
     *
     * @return Exercice
     */
    public function setUserCreate($userCreate)
    {
        $this->userCreate = $userCreate;

        return $this;
    }

    /**
     * Get userCreate
     *
     * @return string
     */
    public function getUserCreate()
    {
        return $this->userCreate;
    }

    /**
     * Set dateModif
     *
     * @param \DateTime $dateModif
     *
     * @return Exercice
     */
    public function setDateModif($dateModif)
    {
        $this->dateModif = $dateModif;

        return $this;
    }

    /**
     * Get dateModif
     *
     * @return \DateTime
     */
    public function getDateModif()
    {
        return $this->dateModif;
    }

    /**
     * Set userModif
     *
     * @param string $userModif
     *
     * @return Exercice
     */
    public function setUserModif($userModif)
    {
        $this->userModif = $userModif;

        return $this;
    }

    /**
     * Get userModif
     *
     * @return string
     */
    public function getUserModif()
    {
        return $this->userModif;
    }

    /**
     * Set datedelete
     *
     * @param \DateTime $datedelete
     *
     * @return Exercice
     */
    public function setDatedelete($datedelete)
    {
        $this->datedelete = $datedelete;

        return $this;
    }

    /**
     * Get datedelete
     *
     * @return \DateTime
     */
    public function getDatedelete()
    {
        return $this->datedelete;
    }

    /**
     * Set userdelete
     *
     * @param string $userdelete
     *
     * @return Exercice
     */
    public function setUserdelete($userdelete)
    {
        $this->userdelete = $userdelete;

        return $this;
    }

    /**
     * Get userdelete
     *
     * @return string
     */
    public function getUserdelete()
    {
        return $this->userdelete;
    }
}
